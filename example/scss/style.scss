@use "sass:math";

nav{
    background:pink;
    padding:10px;
    height:50px;
    ul{
        display:flex;
        list-style:none;
        justify-content: flex-end;
        li{
            color:white;
            margin-right:10px;
        }
    }
}

//es-2
/*ex-2*/
.background-img{
    width:100%;
    height:auto;
    background : {
        image:url("../../imgs/연예인1.png");
        position:center center;
        repeat:no-repeat;
    }
}

//ex-3
/*ex-3*/
//& 앰퍼센트 ampersant
//상위에 있는 부모선택자

.box {
    width:200px;
    height:200px;
    background:red;
    transition:1s;
    &:hover{
        background:blue;
    }
}

/*ex-4*/
//@at-root
//중첩에서 벗어난다
.one{
    color:lime;
    .two{
        color:blue;
        .three{
            color:pink;
            @at-root p {
                color:red;
            }
        }
    }
}

/*변수 사용하기*/
//전역변수
$bgColor:red;
$font-h1:20px;
$valid-sides:left, center, right;
$font-sizes:("myh1" : 45px, "myh2":20px, "myp": 16px);

h1{
    $spanColor:blue;  //지역변수
    color:$bgColor;
    font-size:map-get($font-sizes,"myp")*2;
    span{
        color:$spanColor;
    }
}
p{
    //color:$spanColor;사용 불가 이유는 h1안에 $spanColor라는 변수를 선언해서 지역변수이기때문에 다른곳에는 사용이 불가하다
    text-align:nth($valid-sides,3);
}

/*mixin 사용하기*/
@mixin flexCenter{
    display:flex;
    justify-content:center;
    align-items:center;
    list-style:none;
}

.one{ 
    @include flexCenter();
}

//기본파라미터,default parameter
@mixin flexCenterTwo($size:30px){
    display:flex;
    justify-content:center;
    align-items:center;
    list-style:none;
    li{
        margin-right:$size;
    }
}

.two{
    @include flexCenterTwo(20px);
}

@mixin flexCenterThree($size:30px){
    display:flex;
    justify-content:center;
    align-items:center;
    list-style:none;
    li{
        margin-right:$size;
    }
    @content
}
.three{
    @include flexCenterThree{
        color:blue;
        font-size:20px;
    }
    background:red;
}

/*extend*/
/*class 코드 짜기*/
.profile-user{
    background-image:url("../../imgs/연예인6.png");
    background-size:cover;
    background-position: 50% 50%;
    border-radius: 50%;
    width:100px;
    height:100px;
}

.comment-user{
    @extend .profile-user;
    box-shadow:4px 4px  5px black;
}
%bace-button{
    width:133px;
    height:44px;
    display:flex;
    justify-content:center;
    align-items:center;
    font-size:14px;
}
.follow-button{
    @extend %bace-button;
    color:red;
    border:3px solid blue;
}
.message-button{
    @extend %bace-button;
    color:blue;
    border:3px solid red;
}

// 조건문 반복문 함수
@mixin avatar($size,$circle: false) {
    width:$size;
    height:$size;

    @if $circle{
        border-radius:$size / 2;
    }@else{
        border-radius: $size;
    }
}

.square-av{
    @include avatar(100px, $circle: false);
}
.circle-av{
    @include avatar(100px, $circle: true);
}
// Scss - else문
// Sass 공식문서
// ture이면 밝은 색을, false면 어두운 색을 스타일함
$light-background: #f2ece4;
$light-text: #036;
$dark-background: #6b717f;
$dark-text: #d2e1dd;

@mixin theme-colors($light-theme: true) {
  @if $light-theme {
    background-color: $light-background;
    color: $light-text;
  } @else {
    background-color: $dark-background;
    color: $dark-text;
  }
}

.banner {
  @include theme-colors($light-theme: true);
  body.dark & {
    @include theme-colors($light-theme: false);
  }
}



$one: 10px;
$two: 100px;

@mixin avatar($size, $circle: false) {
    width: $size;
    height: $size;
    background-color: red;

    @if $circle {
        // border-radius: $size / 2; // step 1
        // border-radius: ($size / 2) + px; // step 2
        // border-radius: ($size / 2) + "px"; // 문자열 "00px"로 들어갑니다.

        // 시스템 권고사항
        // math.div($size, 2) or calc($size / 2)
        border-radius: math.div($size, 2);
    } @else {
        border-radius: 2px;
    }
}

.one {
    @include avatar(10px, true)
}

.two {
    @include avatar(10, true)
}

.three{
    @include avatar(10px, false)
}

.four{
    @include avatar(10px)
}

.five{
    @include avatar(10px, 10 > 100)
}

.six {
    @include avatar(10px, $one > $two)
}

// Scss - if, else if, else문
// Sass 공식문서
// 조건에 해당하는 방향에 맞춰서 border-bottom 컬러를 스타일함
@mixin triangle($size, $color, $direction) {
    height: 0;
    width: 0;
  
    border-color: transparent;
    border-style: solid;
    border-width: ($size/2);
  
  
    @if $direction == up {
      border-bottom-color: $color;
    } @else if $direction == right {
      border-left-color: $color;
    } @else if $direction == down {
      border-top-color: $color;
    } @else if $direction == left {
      border-right-color: $color;
    } @else {
      @error "Unknown direction #{$direction}.";
    }
  }
  
  .next {
    @include triangle(5px, black, right);
  }

  //반복문
  @for $i from 1 through 5{
    //# 보간
    .photo-box:nth-child(#{$i}){
        background-image: url('abc#{$i}.png')
    }
  }

  //@each
  $color:red blue green white black;

  @each $c in $color{
    $i: index($color, $c) ;
    .color-circle:nth-child(#{$i}){
        background: $c;
    }
  }

  /*while*/
  $money : 10;
  @while $money > 1{
    $money: $money - 2 ;
    .content-#{$money}{
        width:100px;
        height:100px;
        background:gold;
    }
  }

  /*function*/
// Scss - while문
// Sass 공식문서
// value값이 base보다 작을 때까지 일정한 값으로 계속 나눠준다.
@function scale-below($value, $base, $ratio: 1.618) {
    @while $value > $base {
      $value: ($value/$ratio);
    }
    @return $value;
  }
  
  $normal-font-size: 16px;
  .sup {  
    font-size: scale-below(20px, 19px);
  }

  // 거듭제곱을 구하는 함수
  @function pow($bace, $expo){
    $result:1;
    @for $i from 1 through $expo{
        $result : $result * $bace;
    }
    @return $result;
  }

  .sidebar{
    margin-left:pow(4,3) * 1px;
    font-size: max(10,20,30) * 1px;
  }